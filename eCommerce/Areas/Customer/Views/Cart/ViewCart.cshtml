@model ShoppingCartViewModel


@*
            <div class="p-1 row mb-2">
            <label asp-for="DisplayOrder" class="p-1"></label>
            <input asp-for="DisplayOrder" class="form-control">
        </div>
*@
@using Newtonsoft.Json;

<section class="h-100 h-custom" style="background-color: #eee;">
    <div class="container h-100 py-5">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col">
                <div class="card shopping-cart" style="border-radius: 15px;">

                    <div class="card-body">
                            <div class="col-lg-12">
                                <h3 class="mb-5 pt-2 text-center fw-bold text-uppercase">Your products</h3>
                            @foreach (var product in Model.Products)
                            {
                                //<h6>@product.Product.ImageUrl</h6>
                            <div class="d-flex align-items-center justify-content-center mb-5">
                      @*           <div class="flex-shrink-0">
                                        <img src="@product.Product.ImageUrl" width="200" height="200" class="img-thumbnail" alt="img">
                                </div> *@
                                <div class="flex-grow-1 ms-3">
                                    <a href="#!" class="float-end"><i class="fas fa-times"></i></a>
                                    <h5 class="text-primary">@product.Product.Title</h5>
                                    <h6 style="color: #9e9e9e;">@product.Product.Author</h6>
                                    <div class="d-flex align-items-center">
                                            <p class="fw-bold mb-0 me-5 pe-3"> <span style="color: #9e9e9e;">ISBN: </span> @product.Product.ISBN</p>

                                            <div class="col-lg-2">
                                                <div class="input-group">
                                                    <span class="input-group-btn btn-lg">
@*                                                         <button type="button" class="quantity-left-minus btn-lg btn-danger btn-number m-3" data-type="minus" data-field=""> *@
                                                        <button type="button" class="quantity-left-minus quantity btn-lg btn-danger btn-number m-3" data-product-id="@product.Product.Id" data-type="minus" data-field="">
                                                            <span class="glyphicon glyphicon-minus"></span>
                                                        </button>
                                                    </span>
                                                    <div class="col-4">
                                                        <input type="text" disabled id="quantity-@product.Product.Id" name="quantity" class="form-control input-number text-center " value=@product.Count min="1" max="100">
                                                    </div>

                                                    <span class="input-group-btn">
                                                        <button type="button" class="quantity-right-plus quantity btn-success btn-number m-3" data-product-id="@product.Product.Id" data-type="plus">
                                                                <i class="fa-solid fa-plus"></i>
                                                        </button>
                                                        <i class="fa-solid fa-plus"></i>
                                                    </span>
                                                </div>

                                            </div>

                                            <div class="d-flex align-items-center justify-content-between col-lg-6 text-center">
                                                @{
                                                    double totalPrice;
                                                }

                                                @{
                                                    //price burdan gelmemeli daha sonra düzenleyip bunu viewModel içine at böyle olmaz
                                                    double price = 0;
                                                    if (@product.Count >= 1 && @product.Count < 50)
                                                    {
                                                        price = product.Product.ListPrice2;
                                                    }

                                                    else if (@product.Count >= 50 && @product.Count < 100)
                                                    {
                                                        price = product.Product.ListPrice50;
                                                    }

                                                    else if (@product.Count >= 100)
                                                    {
                                                        price = product.Product.ListPrice100;
                                                    }
                                                    totalPrice = @product.Count * @price;
                                                }
                                                <h6 class="p" style="color: #9e9e9e;">@product.Count x @price = <span> @totalPrice </span> </h6>
                                                <a type="button" asp-controller="Cart" asp-action="Delete" asp-route-id="@product.Id" class="btn btn-danger btn-sm mx-2">Remove</a>
                                            </div>
                                    </div>

                                </div>
                            </div>
                            }

                                <hr class="mb-4" style="height: 2px; background-color: #1266f1; opacity: 1;">
            @*                     <div class="d-flex justify-content-between px-x">
                                    <p class="fw-bold">Discount:</p>
                                    <p class="fw-bold">95$</p>
                                </div> *@
                                <div class="d-flex justify-content-between p-2 mb-2 bg-primary">
                                    <h5 class="fw-bold mb-0">Total:</h5>
                                    <h5 class="fw-bold mb-0">@Model.TotalPrice</h5>
                                </div>

                            <div class="d-flex align-items-center justify-content-between">
                                    <h5>@Model.TotalCount items </h5>
                                    <h6>@Model.LoggedUserId </h6>


                                @{
                                    var orderSumJson = Json.Serialize(Model);
                                }

                                @using (Html.BeginForm("OrderSummary", "Cart",FormMethod.Post))
                                {
@*                                     <input type="hidden" name="ProductsJson" value="@Html.Raw(Json.Serialize(Model.Products))" />
 *@
                                    //<h6> @Model.Products </h6>
                                       // var serializedProducts = JsonSerializer.Serialize(Model.Products);
@*                                     @for(int i = 0;i<Model.Products.Count;i++)
                                    {

                                        @Html.HiddenFor(m => m.Products[i].AppUserId)
                                        @Html.HiddenFor(m => m.Products[i].AppUser)
                                        @Html.HiddenFor(m => m.Products[i].Count)
                                        @Html.HiddenFor(m => m.Products[i].Price)
                                        @Html.HiddenFor(m => m.Products[i].Id)
                                        @Html.HiddenFor(m => m.Products[i].ProductId)
                                        @Html.HiddenFor(m => m.Products[i].Product)
                                      
                                    }
                                    

                                    @Html.HiddenFor(m => m.TotalCount)
                                    @Html.HiddenFor(m => m.TotalPrice)
                                    @Html.HiddenFor(m => m.OrderDetail)
                                    @Html.HiddenFor(m => m.LoggedUserId)
                                    <input type="submit" value="Order Summary" class="text-end btn btn-secondary btn-sm mx-2"/> *@
                                }
                                <input  value="Order Summary" class="orderSum text-end btn btn-secondary btn-sm mx-2" />

                            </div>
                            </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@{
    var cartJson = JsonConvert.SerializeObject(Model);
}


@section Scripts{
    <partial name="_ValidationScriptsPartial" />

     <script type="text/javascript">
         $(document).ready(function () {
             var productID;
             var productQuantityVal;
             //var modelJS = @Html.Raw(Json.Serialize(Model));
            //var modelJS = JsonSerializer.Serialize(@Model);

             var model = @Html.Raw(cartJson);
             var orderSum = @Html.Raw(orderSumJson); 
             $('.quantity').click(function (e) 
             {
                 productID = $(this).data("product-id");                
                 var productQuantity = $('#quantity-' + productID);
                 productQuantityVal = productQuantity.val();

                if ($(this).hasClass('quantity-left-minus'))
                {
                    if (productQuantityVal > 1) {
                        productQuantityVal = parseInt(productQuantityVal, 10) - 1;
                        productQuantity.val(productQuantityVal);
                    }
                }
                else if ($(this).hasClass('quantity-right-plus'))
                {
                    productQuantityVal = parseInt(productQuantityVal, 10) + 1;
                    productQuantity.val(productQuantityVal);
                }

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("UpdateCount")",
                    data: { cart: model, productId: productID, count: productQuantityVal },
                    success: function (result) {
                        console.log("00000000000000000000");
                        console.log(result);
                        location.reload();
                    },
                    error: function (reg, status, error) {
                        console.log("645454545");
                        console.log(status);
                    }
                });
             });



             $('.orderSum').click(function (e) {

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("OrderSummary")",
                    data: { shoppingCartJson: orderSum },
                    success: function (result) {
                        console.log("succeeded");
                        console.log(result);
                        location.reload();
                    },
                    error: function (reg, status, error) {
                        console.log("error");
                        console.log(status);
                        console.log(error);
                    }
                });
             });


         });

    </script> 
}
